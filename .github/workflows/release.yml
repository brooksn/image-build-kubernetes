name: Push Image
run-name: Release ${{ github.ref_name }}
on:
  release:
    types: [published]

env:
  GITHUB_ACTION_TAG: ${{ github.ref_name }}

jobs:
  push-multiarch:
    permissions:
      contents: read
      id-token: write
    runs-on: runs-on,runner=8cpu-linux-x64,run-id=${{ github.run_id }},image=ubuntu22-full-x64
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Check for dev tag
      run: |
        if ! echo "$GITHUB_REF" | grep -E '\+rke2dev[0-9]+'; then
          echo "Build meta must include dev number."
          exit 0
        fi
        echo "Dev tag detected, continuing."

    - name: get the build-args values
      id: get-build-args
      run: |
        echo "$(make -s log | grep TAG)" >> "$GITHUB_ENV"
        echo "$(make -s log | grep GOLANG_VERSION)" >> "$GITHUB_ENV"

    - name: "Read secrets"
      uses: rancher-eio/read-vault-secrets@main
      with:
        secrets: |
          secret/data/github/repo/${{ github.repository }}/private-upstream/${{ github.repository_owner }}/credentials repo | UPSTREAM_GITHUB_REPO ;
          secret/data/github/repo/${{ github.repository }}/private-upstream/${{ github.repository_owner }}/credentials token | UPSTREAM_GITHUB_TOKEN ;
          secret/data/github/repo/${{ github.repository }}/rancher-prime-registry/credentials registry | PRIME_REGISTRY ;
          secret/data/github/repo/${{ github.repository }}/rancher-prime-registry/credentials username | PRIME_REGISTRY_USERNAME ;
          secret/data/github/repo/${{ github.repository }}/rancher-prime-registry/credentials password | PRIME_REGISTRY_PASSWORD

    - name: Build and push image
      uses: rancher/ecm-distro-tools/actions/publish-image@master
      env:
        UPSTREAM_GITHUB_REPO: ${{ env.UPSTREAM_GITHUB_REPO }}
        UPSTREAM_GITHUB_TOKEN: ${{ env.UPSTREAM_GITHUB_TOKEN }}
      with:
        image: hardened-kubernetes
        tag: ${{ github.event.release.tag_name }}
        push-to-public: false
        push-to-prime: true
        prime-repo: rancher
        prime-registry: ${{ env.PRIME_REGISTRY }}
        prime-username: ${{ env.PRIME_REGISTRY_USERNAME }}
        prime-password: ${{ env.PRIME_REGISTRY_PASSWORD }}
